input {
  beats {
    port => 5044  # Порт, на который будет слушать Logstash
  }
}

filter {
  # Обработка логов Nginx
  if [log_type] == "nginx_access" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
      add_field => { "source" => "nginx" }
    }
    date {
      match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
      target => "@timestamp"
    }
    metrics {
      meter => "request_count"
      add_tag => ["http_requests"]
    }
  }

  # Обработка логов ошибок Nginx
  if [log_type] == "nginx_error" {
    grok {
      match => { "message" => "%{NGINX_ERROR_LOG_PATTERN}" }
      add_field => { "source" => "nginx_error" }
    }
    mutate {
      rename => { "message" => "error_message" }
    }
  }

  # Пример обработки логов приложения
  if [log_type] == "app_logs" {
    json {
      source => "message"  # Если лог в формате JSON
    }
    mutate {
      add_field => { "source" => "app" }
    }
  }

  # Удаление ненужных полей
  mutate {
    remove_field => ["host", "message"]
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]  # Адрес вашего сервера Elasticsearch
    index => "logs-%{log_type}-%{+YYYY.MM.dd}"  # Индекс с типом логов и датой
    document_type => "_doc"  # Тип документа
  }

  # Вывод в файл для отладки
  file {
    path => "/var/log/logstash/log_output.log"
    codec => "json_lines"  # Кодек для форматирования вывода
  }
}
